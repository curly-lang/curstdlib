module Main

import IO::File as f
import Temp::Cons_Boxes (cons_S, cons_to_c)


type OpenType = enum Read | enum Write | enum Append | enum ReadPlus | enum WritePlus | enum AppendPlus | enum WriteX | enum WritePlusX
type SeekOrigin = enum SEEK_SET | enum SEEK_CUR | enum SEEK_END

type StringChar = Char | String
type String = (StringChar -> StringChar -> StringChar) -> StringChar


extern "__curly_prim__print_str"
__prim__printf : ptr String -> enum Ok


@impure
main =
  fileName := cons_to_c ".build/testfile";
  fileWriteOpen := f::open_file fileName enum Write;
  Temp::Cons_Boxes::free fileName;
  (
    match fileWriteOpen
      to fileWrite: ptr File =>
        (
          writeLine1 := cons_to_c "Hi!\n";
          writeLine2 := cons_to_c "uwu";

          debug $ f::put_string fileWrite writeLine1;
          debug $ f::put_string fileWrite writeLine2;

          Temp::Cons_Boxes::free writeLine1;
          Temp::Cons_Boxes::free writeLine2;

          f::close_file fileWrite
        )
      to enum Err => debug fileWriteOpen
  );


  fileName := cons_to_c ".build/testfile";
  fileReadOpen := f::open_file fileName enum Read;
  Temp::Cons_Boxes::free fileName;
  (
    match fileReadOpen
      to fileRead: ptr File =>
        (
          readLine1 := f::get_line fileRead;
          readLine2 := f::get_line fileRead;

          __prim__printf readLine1;
          __prim__printf readLine2;

          Temp::Cons_Boxes::free readLine1;
          Temp::Cons_Boxes::free readLine2;

          f::close_file fileRead
        )
      to enum Err => debug fileReadOpen
  );



  fileName := cons_to_c ".build/testfile2";
  fileWritePlusOpen := f::open_file fileName enum WritePlus;
  Temp::Cons_Boxes::free fileName;
  (
    match fileWritePlusOpen
      to fileWritePlus: ptr File =>
        (
          writeLine1 := cons_to_c "Hello.\n";
          writeLine2 := cons_to_c "This is an awesome file.\n";
          writeLine3 := cons_to_c "Agreed?";

          debug $ f::put_string fileWritePlus writeLine1;
          debug $ f::put_string fileWritePlus writeLine2;
          debug $ f::put_string fileWritePlus writeLine3;

          Temp::Cons_Boxes::free writeLine1;
          Temp::Cons_Boxes::free writeLine2;
          Temp::Cons_Boxes::free writeLine3;


          debug $ f::seek fileWritePlus enum SEEK_SET 0;


          readLine1 := f::get_line fileWritePlus;
          readLine2 := f::get_line fileWritePlus;
          readLine3 := f::get_line fileWritePlus;

          __prim__printf readLine1;
          __prim__printf readLine2;
          __prim__printf readLine3;

          Temp::Cons_Boxes::free readLine1;
          Temp::Cons_Boxes::free readLine2;
          Temp::Cons_Boxes::free readLine3;

          f::close_file fileWritePlus
        )
      to enum Err => debug fileWritePlusOpen
  );



  enum Ok
